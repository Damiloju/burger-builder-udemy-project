{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientsName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","classes","price","toFixed","Orders","this","onOrdersFetch","token","userId","orders","id","loading","Spinner","error","Component","connect","state","fetchedOrders","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,wJCuCHC,EApCD,SAAAC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAmBF,EAAMC,YACjCA,EAAYE,KAAK,CAChBC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI5B,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACxC,OACCC,EAAAC,EAAAC,cAAA,QACCC,MAAO,CACNC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEVC,IAAKV,EAAGJ,MAEPI,EAAGJ,KAVL,KAUaI,EAAGH,OAVhB,OAeF,OACCI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACvBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBACQF,EAAAC,EAAAC,cAAA,qBAAaX,EAAMqB,MAAMC,QAAQ,+BCzBtCC,8LAEJC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,yCAItD,IAAIC,EAASJ,KAAKxB,MAAM4B,OAAOrB,IAAI,SAAAR,GAClC,OACCU,EAAAC,EAAAC,cAACb,EAAD,CACCoB,IAAKnB,EAAM8B,GACX5B,YAAaF,EAAME,YACnBoB,OAAQtB,EAAMsB,UAMjB,OAFIG,KAAKxB,MAAM8B,UAASF,EAASnB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,OAC7BP,KAAKxB,MAAMgC,QAAOJ,EAASnB,EAAAC,EAAAC,cAAA,mCACxBF,EAAAC,EAAAC,cAAA,WAAMiB,UAjBMK,aAsCNC,sBAjBS,SAAAC,GACvB,MAAO,CACNP,OAAQO,EAAMpC,MAAMqC,cACpBN,QAASK,EAAMpC,MAAM+B,QACrBE,MAAOG,EAAMpC,MAAMiC,MACnBN,MAAOS,EAAME,KAAKX,MAClBC,OAAQQ,EAAME,KAAKV,SAIM,SAAAW,GAC1B,MAAO,CACNb,cAAe,SAACC,EAAOC,GAAR,OACdW,EAASC,IAAoBb,EAAOC,OAIxBO,CAGbM,YAAiBjB,EAAQkB","file":"static/js/5.83483a8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3-srk\"};","import React from \"react\";\r\n\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst order = props => {\r\n\tconst ingredients = [];\r\n\tfor (let ingredientsName in props.ingredients) {\r\n\t\tingredients.push({\r\n\t\t\tname: ingredientsName,\r\n\t\t\tamount: props.ingredients[ingredientsName]\r\n\t\t});\r\n\t}\r\n\r\n\tconst ingredientOutput = ingredients.map(ig => {\r\n\t\treturn (\r\n\t\t\t<span\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttextTransform: \"capitalize\",\r\n\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\tmargin: \"0 8px\",\r\n\t\t\t\t\tborder: \"1px solid #ccc\",\r\n\t\t\t\t\tpadding: \"5px\"\r\n\t\t\t\t}}\r\n\t\t\t\tkey={ig.name}\r\n\t\t\t>\r\n\t\t\t\t{ig.name} ({ig.amount})\r\n\t\t\t</span>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={classes.Order}>\r\n\t\t\t<p>Ingredients: {ingredientOutput}</p>\r\n\t\t\t<p>\r\n\t\t\t\tPrice: <strong>USD {props.price.toFixed(2)}</strong>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-orders\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Order from \"../../components/Order/Order\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Orders extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onOrdersFetch(this.props.token, this.props.userId);\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet orders = this.props.orders.map(order => {\r\n\t\t\treturn (\r\n\t\t\t\t<Order\r\n\t\t\t\t\tkey={order.id}\r\n\t\t\t\t\tingredients={order.ingredients}\r\n\t\t\t\t\tprice={+order.price}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t\tif (this.props.loading) orders = <Spinner />;\r\n\t\tif (this.props.error) orders = <p>Could not load orders</p>;\r\n\t\treturn <div>{orders}</div>;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\torders: state.order.fetchedOrders,\r\n\t\tloading: state.order.loading,\r\n\t\terror: state.order.error,\r\n\t\ttoken: state.auth.token,\r\n\t\tuserId: state.auth.userId\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonOrdersFetch: (token, userId) =>\r\n\t\t\tdispatch(actions.fetchOrders(token, userId))\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}