{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","validationError","invalid","shouldValidate","touched","push","Invalid","a","createElement","className","ValidationError","elementType","Object","assign","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","htmlFor","Label","label","module","exports","Auth","state","controls","email","type","placeholder","validation","required","valid","password","minLength","formIsValid","isSignUp","authHandler","event","preventDefault","userData","_this","onFormSubmit","inputFormHandler","id","updatedEl","C_Users_USERPC_Desktop_Udemy_React_burger_builder_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","deepUpdate","target","checkValidity","setState","switchAuthMode","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","rules","isValid","trim","length","_this2","formElements","redirect","isAuthenticated","react__WEBPACK_IMPORTED_MODULE_6___default","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","to","config","form","onSubmit","formElement","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_11__","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_10__","disabled","btnType","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_14__","clicked","Component","connect","auth","token","burgerBuilder","building","redirectPath","dispatch","actions","withErrorHandler","axios"],"mappings":"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","file":"static/js/4.86ede610.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst input = props => {\r\n\tlet inputElement = null;\r\n\tconst inputClasses = [classes.InputElement];\r\n\tlet validationError = false;\r\n\r\n\tif (props.invalid && props.shouldValidate && props.touched) {\r\n\t\tinputClasses.push(classes.Invalid);\r\n\t\tvalidationError = (\r\n\t\t\t<p className={classes.ValidationError}>\r\n\t\t\t\tPlease enter a valid value!\r\n\t\t\t</p>\r\n\t\t);\r\n\t}\r\n\r\n\tswitch (props.elementType) {\r\n\t\tcase \"input\":\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase \"textarea\":\r\n\t\t\tinputElement = (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase \"select\":\r\n\t\t\tinputElement = (\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.elementConfig.options.map(option => (\r\n\t\t\t\t\t\t<option key={option.value} value={option.value}>\r\n\t\t\t\t\t\t\t{option.displayValue}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputClasses.join(\" \")}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<div className={classes.Input}>\r\n\t\t\t<label htmlFor={props.elementType} className={classes.Label}>\r\n\t\t\t\t{props.label}\r\n\t\t\t</label>\r\n\t\t\t{inputElement}\r\n\t\t\t{validationError}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__36-IQ\",\"Label\":\"Input_Label__X32XB\",\"InputElement\":\"Input_InputElement__2LJ1k\",\"Invalid\":\"Input_Invalid__1ugdA\",\"ValidationError\":\"Input_ValidationError__2MX_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3x7Dw\"};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport classes from \"./Auth.module.css\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Auth extends Component {\r\n\tstate = {\r\n\t\tcontrols: {\r\n\t\t\temail: {\r\n\t\t\t\telementType: \"input\",\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: \"email\",\r\n\t\t\t\t\tplaceholder: \"Your EMAIL\"\r\n\t\t\t\t},\r\n\t\t\t\tvalue: \"\",\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false\r\n\t\t\t},\r\n\t\t\tpassword: {\r\n\t\t\t\telementType: \"input\",\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: \"password\",\r\n\t\t\t\t\tplaceholder:\r\n\t\t\t\t\t\t\"Your password (must be at least 6 characters long)\"\r\n\t\t\t\t},\r\n\t\t\t\tvalue: \"\",\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tminLength: 6\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tformIsValid: false,\r\n\t\tisSignUp: true\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.props.buildingBurger && this.props.authRedirectPath !== \"/\") {\r\n\t\t\tthis.props.onSetAuthRedirectPath();\r\n\t\t}\r\n\t}\r\n\r\n\tauthHandler = event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst userData = {\r\n\t\t\temail: this.state.controls.email.value,\r\n\t\t\tpassword: this.state.controls.password.value\r\n\t\t};\r\n\r\n\t\tthis.props.onFormSubmit(userData, this.state.isSignUp);\r\n\t};\r\n\r\n\tcheckValidity(value, rules) {\r\n\t\tlet isValid = true;\r\n\r\n\t\tif (rules.required) isValid = value.trim() !== \"\" && isValid;\r\n\r\n\t\tif (rules.minLength)\r\n\t\t\tisValid = value.length >= rules.minLength && isValid;\r\n\r\n\t\treturn isValid;\r\n\t}\r\n\r\n\tinputFormHandler = (event, id) => {\r\n\t\tconst updatedEl = {\r\n\t\t\t...this.state.controls\r\n\t\t};\r\n\r\n\t\tconst deepUpdate = {\r\n\t\t\t...updatedEl[id]\r\n\t\t};\r\n\r\n\t\tdeepUpdate.value = event.target.value;\r\n\r\n\t\tdeepUpdate.valid = this.checkValidity(\r\n\t\t\tdeepUpdate.value,\r\n\t\t\tdeepUpdate.validation\r\n\t\t);\r\n\r\n\t\tdeepUpdate.touched = true;\r\n\r\n\t\tlet formIsValid = true;\r\n\r\n\t\tfor (let id in updatedEl)\r\n\t\t\tformIsValid = updatedEl[id].valid && formIsValid;\r\n\r\n\t\tupdatedEl[id] = deepUpdate;\r\n\r\n\t\tthis.setState({\r\n\t\t\tcontrols: updatedEl,\r\n\t\t\tformIsValid: formIsValid\r\n\t\t});\r\n\t};\r\n\tswitchAuthMode = () => {\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn { isSignUp: !prevState.isSignUp };\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst formElements = [];\r\n\r\n\t\tlet redirect = null;\r\n\r\n\t\tif (this.props.isAuthenticated)\r\n\t\t\tredirect = <Redirect to={this.props.authRedirectPath} />;\r\n\r\n\t\tfor (let key in this.state.controls) {\r\n\t\t\tformElements.push({\r\n\t\t\t\tid: key,\r\n\t\t\t\tconfig: this.state.controls[key]\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet form = (\r\n\t\t\t<form onSubmit={this.authHandler}>\r\n\t\t\t\t{formElements.map(formElement => (\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tkey={formElement.id}\r\n\t\t\t\t\t\telementType={formElement.config.elementType}\r\n\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\r\n\t\t\t\t\t\tvalue={formElement.config.value}\r\n\t\t\t\t\t\tinvalid={!formElement.config.valid}\r\n\t\t\t\t\t\tshouldValidate={formElement.config.validation}\r\n\t\t\t\t\t\ttouched={formElement.config.touched}\r\n\t\t\t\t\t\tchanged={event =>\r\n\t\t\t\t\t\t\tthis.inputFormHandler(event, formElement.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t<Button disabled={!this.state.formIsValid} btnType=\"Success\">\r\n\t\t\t\t\t{this.state.isSignUp ? \"Sign \tUp\" : \"Sign In\"}\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t);\r\n\r\n\t\tif (this.props.loading) form = <Spinner />;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.Auth}>\r\n\t\t\t\t{redirect}\r\n\t\t\t\t<h4>Enter yout Details below</h4>\r\n\t\t\t\t{form}\r\n\t\t\t\t<Button clicked={this.switchAuthMode} btnType=\"Danger\">\r\n\t\t\t\t\tSwitch To {this.state.isSignUp ? \"Sign In\" : \"Sign Up\"}\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tloading: state.auth.loading,\r\n\t\tisAuthenticated: state.auth.token !== null,\r\n\t\tbuildingBurger: state.burgerBuilder.building,\r\n\t\tauthRedirectPath: state.auth.redirectPath\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonFormSubmit: (userData, isSignUp) =>\r\n\t\t\tdispatch(actions.authenticateUser(userData, isSignUp)),\r\n\t\tonSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withErrorHandler(Auth, axios));\r\n"],"sourceRoot":""}